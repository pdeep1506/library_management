swagger: "2.0"
info:
  title: inventory-backend
  description: This is the documentation for inventory backend
  version: 1.0.0
  servers: 
    # url: "http://localhost:8000/api/v1/"
    url: "http://localhost:8000/api"
    description: This is my local server
    
schemes: [http]

paths:
# User  registration
  /api/v1/auth/registration:
    post:
      summary: Used to register user.
      description: It used to register user.
      produces:
        - application/json
      consumes:
        -application/json
      parameters:
      - in: body
        name: User data 
        schema:
          $ref: '#definitions/userSchema'
      responses:
        201:
          description: Successfully created account.
    
        500:
          description: Interner Server error.
        401:
          description: Invalid Data.
        409: 
          description: Email or contact number is already in database
#user login
  /api/v1/auth/login:
    post:
      summary: Used to login user
      description: It used to login into account
      produces:
        - application/json
      consumes:
        -application/json
      parameters:
      - in: body
        name: User data 
        schema:
          $ref: '#definitions/userLoginSchema'
      responses:
        200:
          description: Successfully login.
    
        500:
          description: Interner Server error.
        401:
          description: Unauthorized.
        409: 
          description: Email or contact number is already in database
  
# used for the admin register
  /api/v1/auth/adminRegister:
    post:
      summary: Used to register admin user
      description: It used to register admin user.
      produces:
        - application/json
      consumes:
        -application/json
      parameters:
      - in: body
        name: User data 
        schema:
          $ref: '#definitions/userSchema'
      responses:
        201:
          description: Successfully created account.
    
        500:
          description: Interner Server error.
        401:
          description: Invalid Data.
        409: 
          description: Email or contact number is already in database

# user 
  /api/v1/user/allUsers:
    get:
      summary: Used to get data of all user
      description: It used to get data  of all  user.
      produces:
        - application/json
    
      
      responses:
        200:
          description: Successfully fetched  data.
        401:
          description: you are not authorized.
    
        
  
definitions:
  userSchema:
    type: object
    properties:
      fName:
        type: string
      lName:
        type: string
      cNumber:
        type: number
      email:
        type: string
      password:
        type: string
      admin:
        type: boolean

  userLoginSchema:
    type: object
    properties:
      
      email:
        type: string
      password:
        type: string
      